# Travis CI configuration file.
# @link https://travis-ci.org/

# I have no idea if this will work... just scraping code from other gits :)

# Plugin The SEO Framework
# @link https://wordpress.org/plugins/autodescription/

# Tell Travis CI we're using PHP
language: php

# Declare versions of PHP to use. Use one decimal max.
# Declare which versions of WordPress to test against.
# Also declare whether or not to test in Multisite.
# Trunk (current version in development is 4.4)
# @link https://github.com/WordPress/WordPress
matrix:
  include:
    - php: "7.0"
      env: WP_VERSION=master WP_MULTISITE=1
#    - php: "7.0"
#      env: WP_VERSION=4.4
#    - php: "5.6"
#      env: WP_VERSION=master WP_MULTISITE=1
#    - php: "5.6"
#      env: WP_VERSION=4.4
#    - php: "5.6"
#      env: WP_VERSION=4.3
#    - php: "5.6"
#      env: WP_VERSION=4.2
#    - php: "5.6"
#      env: WP_VERSION=4.1
#    - php: "5.6"
#      env: WP_VERSION=4.0
#    # If this fails, I'll probably drop support for 3.9
#    - php: "5.6"
#      env: WP_VERSION=3.9
#    # If this fails, I'll probably drop support for 3.8
#    - php: "5.6"
#      env: WP_VERSION=3.8
#    # If this fails, I'll probably drop support for 3.7
#    - php: "5.6"
#      env: WP_VERSION=3.7
#    # If this fails, I'll probably drop support for 3.6
#    - php: "5.6"
#      env: WP_VERSION=3.6
#    - php: "5.5"
#      env: WP_VERSION=4.4
#    - php: "5.4"
#      env: WP_VERSION=4.4
#    - php: "5.3"
#      env: WP_VERSION=4.4
#    # Current $required_php_version for WordPress: 5.2.4
#    - php: "5.2"
#      env: WP_VERSION=master
#    - php: "5.2"
#      env: WP_VERSION=4.4 WP_MULTISITE=1
#    - php: "5.2"
#      env: WP_VERSION=4.3
#    - php: "hhvm"
#      env: WP_VERSION=master WP_MULTISITE=1
#    - php: "nightly"
#      env: WP_VERSION=master
#  allow_failures:
#    - php: "hhvm"
#    - php: "nightly"

# Ditch sudo and use containers.
# @link http://docs.travis-ci.com/user/migrating-from-legacy/#Why-migrate-to-container-based-infrastructure%3F
# @link http://docs.travis-ci.com/user/workers/container-based-infrastructure/#Routing-your-build-to-container-based-infrastructure
sudo: false

# Use this to prepare your build for testing.
# e.g. copy database configurations, environment variables, etc.
# Failures in this section will result in build status 'errored'.
before_script:
    - export PLUGIN_SLUG=$(basename $(pwd))
    - git clone --depth=1 --branch $WP_VERSION git://develop.git.wordpress.org/ /tmp/wordpress

    # Set up The SEO Framework plugin environment.
    - cd ..
    - mv $PLUGIN_SLUG "/tmp/wordpress/src/wp-content/plugins/$PLUGIN_SLUG"

    # Set up WordPress.
    - cd /tmp/wordpress
    - git checkout $WP_VERSION
    - mysql -e "CREATE DATABASE wordpress_tests;" -uroot
    - cp wp-tests-config-sample.php wp-tests-config.php
    - sed -i "s/youremptytestdbnamehere/wordpress_tests/" wp-tests-config.php
    - sed -i "s/yourusernamehere/travis/" wp-tests-config.php
    - sed -i "s/yourpasswordhere//" wp-tests-config.php

    # Install plugin.
    - cd "/tmp/wordpress/src/wp-content/plugins/$PLUGIN_SLUG"

    # Refresh PHP.
    - phpenv rehash

# Run test script commands.
script:
    phpunit

# For now, no notifications are needed, as I'm with my head in this project, daily.
notifications:
    email: false
